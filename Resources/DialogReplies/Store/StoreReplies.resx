<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutBtn" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AboutSubtitle" xml:space="preserve">
    <value>Learn more about {store}.</value>
  </data>
  <data name="AboutTitle" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="BackToStoreBtn" xml:space="preserve">
    <value>Back to store</value>
  </data>
  <data name="BetweenPriceRange" xml:space="preserve">
    <value>betweeen {min} and {max} euros</value>
  </data>
  <data name="BrandsSubtitle" xml:space="preserve">
    <value>View all the available brands in {store}.</value>
  </data>
  <data name="BrandsTitle" xml:space="preserve">
    <value>Brands</value>
  </data>
  <data name="ChangeFiltersBtn" xml:space="preserve">
    <value>Change filters</value>
  </data>
  <data name="ChangeStoreBtn" xml:space="preserve">
    <value>Change store</value>
  </data>
  <data name="ContactBtn" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="CreateBtn" xml:space="preserve">
    <value>E-Store Creation</value>
  </data>
  <data name="CreateSubtitle" xml:space="preserve">
    <value>Create your own messenger store for FREE, by signing up below!!</value>
  </data>
  <data name="CreateTitle" xml:space="preserve">
    <value>Create Your Store!</value>
  </data>
  <data name="CustomerService" xml:space="preserve">
    <value>Customer service for {store} store:</value>
  </data>
  <data name="CustomerServiceBtn" xml:space="preserve">
    <value>More Info</value>
  </data>
  <data name="CustomerServiceSubtitle" xml:space="preserve">
    <value>Do you want to learn more about {store}?</value>
  </data>
  <data name="CustomerServiceTitle" xml:space="preserve">
    <value>Customer Service</value>
  </data>
  <data name="FilterBrand" xml:space="preserve">
    <value>Brand</value>
  </data>
  <data name="FilterCategory" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="FilterChanged" xml:space="preserve">
    <value>Filter changed successfully!</value>
  </data>
  <data name="FilterColor" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="FilteredSearch" xml:space="preserve">
    <value>Filtered search 🎨</value>
  </data>
  <data name="FilterGender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="FilterPrice" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="FiltersAny" xml:space="preserve">
    <value>Any</value>
  </data>
  <data name="FiltersBrandQ" xml:space="preserve">
    <value>What brand would you like to search for?</value>
  </data>
  <data name="FiltersCategoryA1" xml:space="preserve">
    <value>T-shirts</value>
  </data>
  <data name="FiltersCategoryA2" xml:space="preserve">
    <value>Trousers</value>
  </data>
  <data name="FiltersCategoryA3" xml:space="preserve">
    <value>Dresses</value>
  </data>
  <data name="FiltersCategoryA4" xml:space="preserve">
    <value>Purses</value>
  </data>
  <data name="FiltersCategoryA5" xml:space="preserve">
    <value>Shoes</value>
  </data>
  <data name="FiltersCategoryA6" xml:space="preserve">
    <value>Jackets</value>
  </data>
  <data name="FiltersCategoryQ" xml:space="preserve">
    <value>What clothing type are you looking for?{\n}You can also set your own.</value>
  </data>
  <data name="FiltersChangeQ" xml:space="preserve">
    <value>Would you like to add or change anything?</value>
  </data>
  <data name="FiltersColorBlack" xml:space="preserve">
    <value>Black</value>
  </data>
  <data name="FiltersColorBlue" xml:space="preserve">
    <value>Blue</value>
  </data>
  <data name="FiltersColorBrown" xml:space="preserve">
    <value>Brown</value>
  </data>
  <data name="FiltersColorGreen" xml:space="preserve">
    <value>Green</value>
  </data>
  <data name="FiltersColorOrange" xml:space="preserve">
    <value>Orange</value>
  </data>
  <data name="FiltersColorPink" xml:space="preserve">
    <value>Pink</value>
  </data>
  <data name="FiltersColorPurple" xml:space="preserve">
    <value>Purple</value>
  </data>
  <data name="FiltersColorQ" xml:space="preserve">
    <value>What color suits you best?{\n}You can also set your own.</value>
  </data>
  <data name="FiltersColorRed" xml:space="preserve">
    <value>Red</value>
  </data>
  <data name="FiltersColorWhite" xml:space="preserve">
    <value>White</value>
  </data>
  <data name="FiltersCurrent" xml:space="preserve">
    <value>Your current filters' selection is:{\n}</value>
  </data>
  <data name="FiltersEmpty" xml:space="preserve">
    <value>No filters have been selected yet. What would you like to add?</value>
  </data>
  <data name="FiltersGenderFemale" xml:space="preserve">
    <value>Women's wear</value>
  </data>
  <data name="FiltersGenderMale" xml:space="preserve">
    <value>Men's wear</value>
  </data>
  <data name="FiltersGenderQ" xml:space="preserve">
    <value>Are you looking for men's or women's wear?</value>
  </data>
  <data name="FilterSize" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="FiltersPriceQ" xml:space="preserve">
    <value>What is the price range you prefer?{\n}You can also set your own.</value>
  </data>
  <data name="FiltersSizeQ" xml:space="preserve">
    <value>What is the size you want?</value>
  </data>
  <data name="FiltersTypeOwn" xml:space="preserve">
    <value>{\n}You can also set your own.</value>
  </data>
  <data name="However" xml:space="preserve">
    <value>However you can take a look at the following new products!</value>
  </data>
  <data name="MoreStores" xml:space="preserve">
    <value>More stores</value>
  </data>
  <data name="NotHave" xml:space="preserve">
    <value>store currently has no</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>products</value>
  </data>
  <data name="ReferralBtn" xml:space="preserve">
    <value>Visit Store</value>
  </data>
  <data name="ReferralSubtitle" xml:space="preserve">
    <value>Shop in {store} through Zoie's Store in messenger! Tap the image or click the button below to start shopping.</value>
  </data>
  <data name="ReferralTitle" xml:space="preserve">
    <value>{store} Messenger Store on Zoie, an AI Powered Marketplace!</value>
  </data>
  <data name="ReselectBtn" xml:space="preserve">
    <value>Reselect store</value>
  </data>
  <data name="ResultsFound" xml:space="preserve">
    <value>Here's what I found:</value>
  </data>
  <data name="ReturnsPolicySubtitle" xml:space="preserve">
    <value>Learn everything you want to know about returns in {store}.</value>
  </data>
  <data name="ReturnsPolicyTitle" xml:space="preserve">
    <value>Returns Policy</value>
  </data>
  <data name="RevisitStores" xml:space="preserve">
    <value>Revisit stores ↩️</value>
  </data>
  <data name="SelectBtn" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SelectStore" xml:space="preserve">
    <value>Let’s pick a store and buy an outfit for today!</value>
  </data>
  <data name="ShippingSubtitle" xml:space="preserve">
    <value>View the available shipping ways, days to deliver and more about {store}.</value>
  </data>
  <data name="ShippingTitle" xml:space="preserve">
    <value>Shipping</value>
  </data>
  <data name="ShopBtn" xml:space="preserve">
    <value>Shop</value>
  </data>
  <data name="ShopIntro" xml:space="preserve">
    <value>Let’s get this shopping started! What are you looking for?</value>
  </data>
  <data name="ShopSubtitle" xml:space="preserve">
    <value>Let's start shopping!</value>
  </data>
  <data name="ShopTitle" xml:space="preserve">
    <value>Shop</value>
  </data>
  <data name="StoresBtn" xml:space="preserve">
    <value>🛍️ Stores</value>
  </data>
  <data name="ThereAreNo" xml:space="preserve">
    <value>I'm afraid that no</value>
  </data>
  <data name="ThisSize" xml:space="preserve">
    <value>of this size</value>
  </data>
  <data name="ViewAll" xml:space="preserve">
    <value>View all products</value>
  </data>
  <data name="Wear" xml:space="preserve">
    <value>wear</value>
  </data>
  <data name="WindowShoppingBtn" xml:space="preserve">
    <value>View Collections</value>
  </data>
  <data name="WindowShoppingSubtitle" xml:space="preserve">
    <value>View all the collections created by {store}!</value>
  </data>
  <data name="WindowShoppingTitle" xml:space="preserve">
    <value>Window Shopping</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact us at info@zoie.io and a represenative will contact you.</value>
  </data>
  <data name="HereYouAre" xml:space="preserve">
    <value>Here you are!</value>
  </data>
  <data name="ViewItemsBtn" xml:space="preserve">
    <value>View items</value>
  </data>
  <data name="WindowCollectionSubtitle" xml:space="preserve">
    <value>Fashion suggestions by {store}</value>
  </data>
  <data name="WindowCollectionTitle" xml:space="preserve">
    <value>window shopping - {gender}</value>
  </data>
  <data name="CollectionsEmpty" xml:space="preserve">
    <value>{store} has no collections yet :/</value>
  </data>
  <data name="MoreThan" xml:space="preserve">
    <value>more than</value>
  </data>
  <data name="NoContinueBtn" xml:space="preserve">
    <value>No, continue</value>
  </data>
  <data name="CanBeFound" xml:space="preserve">
    <value>can be found</value>
  </data>
  <data name="TheMarketplace" xml:space="preserve">
    <value>Zoie's marketplace</value>
  </data>
  <data name="TheStore" xml:space="preserve">
    <value>Store</value>
  </data>
  <data name="ReturnsPolicyBtn" xml:space="preserve">
    <value>Returns</value>
  </data>
</root>